name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Update system and install dependencies
      run: |
        sudo apt-get update
        sudo apt full-upgrade -y
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libjansson-dev libomp-dev automake make autotools-dev build-essential libmpfr-dev binutils linux-libc-dev linux-libc-dev-arm64-cross linux-libc-dev-armel-cross linux-libc-dev-armhf-cross libgmp3-dev libmpc-dev gcc-arm-linux-gnueabihf software-properties-common git nano cmake wget curl lsb-release wget software-properties-common gnupg
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-get update
        export PATH=$PATH:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin

    - name: Download and install LLVM
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 90
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 90
        sudo ./llvm.sh 18
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 100
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 100
        sudo update-alternatives --config cc

    - name: Clone repository
      run: git clone https://github.com/simeononsecurity/CCminer-ARM-optimized.git
      
    - name: Navigate to repository directory
      run: cd CCminer-ARM-optimized
      
    - name: Make scripts executable
      run: |
        chmod +x build.sh
        chmod +x configure.sh
        chmod +x autogen.sh
    - name: Build CCminer with clang++
      run: CXX=clang++ CC=clang ./build.sh
